CLASS ZCL_COC_BAR_COMPONENT DEFINITION
  PUBLIC
  CREATE PUBLIC.

PUBLIC SECTION.

  METHODS CONSTRUCTOR
    IMPORTING 
      !PARENT_CONTAINER TYPE REF TO CL_GUI_CONTAINER
      !COMPONENT TYPE ZCOCCMT005 " TABLE TYPE OF STRUCTURE ZCOCS039 ( RATIO(NUMC3), DESCRIPT(TEXT100), BARND(BAPIYESNO) )
      !COLUMN TYPE FLAG DEFAULT SPACE.
  METHODS GET_CONTAINER
    EXPORTING
      !CONTAINER1 TYPE REF TO CL_GUI_CONTAINER
      !CONTAINER2 TYPE REF TO CL_GUI_CONTAINER
      !CONTAINER3 TYPE REF TO CL_GUI_CONTAINER
      !CONTAINER4 TYPE REF TO CL_GUI_CONTAINER.
  METHODS SET_TITLE
    IMPORTING
      !ID TYPE I
      !TITLE TYPE STRING.
PROTECTED SECTION.

  DATA BAR_COMPONENT TYPE ZCOCCMT005.
PRIVATE SECTION.

  DATA SPLITTER_CONTAINER TYPE REF TO CL_GUI_SPLITTER_CONTAINER.
  DATA SPLITTER_SUB_1 TYPE REF TO CL_GUI_SPLITTER_CONTAINER.
  DATA SPLITTER_SUB_2 TYPE REF TO CL_GUI_SPLITTER_CONTAINER.
  DATA SPLITTER_SUB_3 TYPE REF TO CL_GUI_SPLITTER_CONTAINER.
  DATA SPLITTER_SUB_4 TYPE REF TO CL_GUI_SPLITTER_CONTAINER.
  DATA CONTAINER1 TYPE REF TO CL_GUI_CONTAINER.
  DATA CONTAINER2 TYPE REF TO CL_GUI_CONTAINER.
  DATA CONTAINER3 TYPE REF TO CL_GUI_CONTAINER.
  DATA CONTAINER4 TYPE REF TO CL_GUI_CONTAINER.
  DATA SUB_CONTAINER1 TYPE REF TO CL_GUI_CONTAINER.
  DATA SUB_CONTAINER2 TYPE REF TO CL_GUI_CONTAINER.
  DATA SUB_CONTAINER3 TYPE REF TO CL_GUI_CONTAINER.
  DATA SUB_CONTAINER4 TYPE REF TO CL_GUI_CONTAINER.
  DATA SUB_CONTAINER5 TYPE REF TO CL_GUI_CONTAINER.
  DATA SUB_CONTAINER6 TYPE REF TO CL_GUI_CONTAINER.
  DATA SUB_CONTAINER7 TYPE REF TO CL_GUI_CONTAINER.
  DATA SUB_CONTAINER8 TYPE REF TO CL_GUI_CONTAINER.
  DATA HEADER1 TYPE REF TO ZCL_COC_BSP_HEADER.
  DATA HEADER2 TYPE REF TO ZCL_COC_BSP_HEADER.
  DATA HEADER3 TYPE REF TO ZCL_COC_BSP_HEADER.
  DATA HEADER4 TYPE REF TO ZCL_COC_BSP_HEADER.
ENDCLASS.



CLASS ZCL_COC_BAR_COMPONENT IMPLEMENTATION.




    




  METHOD CONSTRUCTOR.

    FIELD-SYMBOLS: <FS_CON>   TYPE REF TO CL_GUI_CONTAINER,
                   <FS_SPL>   TYPE REF TO CL_GUI_SPLITTER_CONTAINER,
                   <FS_SUB1>  TYPE REF TO CL_GUI_CONTAINER,
                   <FS_SUB2>  TYPE REF TO CL_GUI_CONTAINER,
                   <FS_HEAD>  TYPE REF TO ZCL_COC_BSP_HEADER.

    "헤더바(COMPONENT 개수)가 추가 될 영역 쪼개기 - 최대 4쌍
    DATA(LV_COMPONENT_LINE) = LINES( COMPONENT ).          "Only allowed 4 entries
    IF LV_COMPONENT_LINE > 4.
      LV_COMPONENT_LINE = 4.
    ENDIF.

    IF COLUMN = SPACE.
      SPLITTER_CONTAINER = NEW #( PARENT   = PARENT_CONTAINER
                                  ROWS     = LV_COMPONENT_LINE
                                  COLUMNS  = '1' 
                                ).
      SPLITTER_CONTAINER->SET_ROW_MODE( CL_GUI_SPLITTER_CONTAINER=>MODE_RELATIVE ).    " % RATIO
    ELSE.
      SPLITTER_CONTAINER = NEW #( PARENT   = PARENT_CONTAINER
                                  ROWS     = '1' 
                                  COLUMNS  = LV_COMPONENT_LINE
                                ).
      SPLITTER_CONTAINER->SET_COLUMN_MODE( CL_GUI_SPLITTER_CONTAINER=>MODE_RELATIVE ). " % RATIO
    ENDIF.

    SPLITTER_CONTAINER->SET_BORDER( CL_GUI_CFW=>FALSE ).

    DO LV_COMPONENT_LINE TIMES.
      IF COLUMN = SPACE.
        SPLITTER_CONTAINER->SET_ROW_SASH( ID     = CONV #( SY-INDEX )
                                          TYPE   = CL_GUI_SPLITTER_CONTAINER=>TYPE_MOVABLE
                                          VALUE  = CL_GUI_SPLITTER_CONTAINER=>FALSE ).
      ELSE.
        SPLITTER_CONTAINER->SET_COLUMN_SASH( ID     = CONV #( SY-INDEX )
                                             TYPE   = CL_GUI_SPLITTER_CONTAINER=>TYPE_MOVABLE
                                             VALUE  = CL_GUI_SPLITTER_CONTAINER=>TRUE ).
      ENDIF.
    ENDDO.

    LOOP AT COMPONENT INTO DATA(LS_COMPONENT) FROM 1 TO 4.
      IF COLUMN = SPACE.
        SPLITTER_CONTAINER->SET_ROW_HEIGHT( ID     = CONV #( SY-TABIX )
                                            HEIGHT = CONV #( LS_COMPONENT-RATIO ) ).
      ELSE.
        SPLITTER_CONTAINER->SET_COLUMN_WIDTH( ID    = CONV #( SY-TABIX )
                                               WIDTH = CONV #( LS_COMPONENT-RATIO ) ).
      ENDIF.
      APPEND LS_COMPONENT TO BAR_COMPONENT.
    ENDLOOP.

    "쪼개진 영역마다 헤더바/바디 영역으로 나누고 헤더바에 텍스트 출력하기
    DO 4 TIMES.
    
      UNASSIGN: <FS_CON>, <FS_SPL>, <FS_SUB1>, <FS_SUB2>, <FS_HEAD>.

      DATA(LV_CON)  = |CONTAINER{ SY-INDEX }|.
      DATA(LV_SPL)  = |SPLITTER_SUB_{ SY-INDEX }|.
      DATA(LV_SUB1) = |SUB_CONTAINER{ 2 * SY-INDEX - 1 }|.
      DATA(LV_SUB2) = |SUB_CONTAINER{ 2 * SY-INDEX }|.
      DATA(LV_HEAD) = |HEADER{ SY-INDEX }|.

      ASSIGN (LV_CON)  TO <FS_CON>.
      ASSIGN (LV_SPL)  TO <FS_SPL>.
      ASSIGN (LV_SUB1) TO <FS_SUB1>.
      ASSIGN (LV_SUB2) TO <FS_SUB2>.
      ASSIGN (LV_HEAD) TO <FS_HEAD>.

      IF COLUMN = SPACE.
        <FS_CON> = SPLITTER_CONTAINER->GET_CONTAINER( ROW = SY-INDEX COLUMN = 1 ).
      ELSE.
        <FS_CON> = SPLITTER_CONTAINER->GET_CONTAINER( ROW = 1 COLUMN = SY-INDEX ).
      ENDIF.

      "둘로 쪼개기
      IF <FS_CON> IS NOT INITIAL.

        <FS_SPL> = NEW #( PARENT = <FS_CON> ROWS = 2 COLUMNS = 1 ).

        <FS_SPL>->SET_BORDER( CL_GUI_CFW=>FALSE ).
        <FS_SPL>->SET_ROW_MODE( CL_GUI_SPLITTER_CONTAINER=>MODE_ABSOLUTE ).   "VALUE

        <FS_SPL>->SET_ROW_SASH( ID    = 1
                                TYPE  = CL_GUI_SPLITTER_CONTAINER=>TYPE_MOVABLE
                                VALUE = CL_GUI_SPLITTER_CONTAINER=>FALSE ).
        <FS_SPL>->SET_ROW_SASH( ID    = 2
                                TYPE  = CL_GUI_SPLITTER_CONTAINER=>TYPE_MOVABLE
                                VALUE = CL_GUI_SPLITTER_CONTAINER=>FALSE ).
                           
        READ TABLE COMPONENT INTO LS_COMPONENT INDEX SY-INDEX.
        IF LS_COMPONENT-BARND = 'X'.
          <FS_SPL>->SET_ROW_HEIGHT( ID = 1 HEIGHT = 0 ).
        ELSE.
          <FS_SPL>->SET_ROW_HEIGHT( ID = 1 HEIGHT = ZCL_COC_BSP_HEADER=>HEADER_HEIGHT ).
        ENDIF.

        <FS_SPL>->SET_ROW_HEIGHT( ID = 2 HEIGHT = -1 ).

      ENDIF.

      "첫번째 영역에 헤더바 텍스트 출력
      IF <FS_SPL> IS NOT INITIAL.
        <FS_SUB1> = <FS_SPL>->GET_CONTAINER( ROW = 1 COLUMN = 1 ).
        <FS_SUB2> = <FS_SPL>->GET_CONTAINER( ROW = 2 COLUMN = 1 ).

        <FS_HEAD> = NEW #( PARENT_CONTAINER = <FS_SUB1> ).

        READ TABLE COMPONENT INTO LS_COMPONENT INDEX SY-INDEX.
        <FS_HEAD>->SET_HEADER_TITLE( TITLE = CONV #( LS_COMPONENT-DESCRIPT ) ).
      ENDIF.

    ENDDO.

  ENDMETHOD.










  METHOD GET_CONTAINER.

    CONTAINER1 = SUB_CONTAINER2.
    CONTAINER2 = SUB_CONTAINER4.
    CONTAINER3 = SUB_CONTAINER6.
    CONTAINER4 = SUB_CONTAINER8.

  ENDMETHOD.








  METHOD SET_TITLE.

    CASE ID.
      WHEN 1.
        HEADER1->SET_HEADER_TITLE( TITLE ).
      WHEN 2.
        HEADER2->SET_HEADER_TITLE( TITLE ).
      WHEN 3.
        HEADER3->SET_HEADER_TITLE( TITLE ).
      WHEN 4.
        HEADER4->SET_HEADER_TITLE( TITLE ).
    ENDCASE.

  ENDMETHOD.
ENDCLASS.
        